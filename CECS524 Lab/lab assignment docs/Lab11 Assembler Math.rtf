{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\ftech\fcharset77 Symbol;\f2\fmodern\fcharset0 CourierNewPS-BoldMT;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{lower-alpha\}.}{\leveltext\leveltemplateid102\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1319\margr1319
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs20 \cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Lab 11	CECS 524	Spring 2019		DUE: end of lab \
\
Deliverables:\
Assembler file to BB\
\
Objectives:\
\pard\tx20\tx360\tx360\pardeftab720\li360\fi-360\partightenfactor0
\ls1\ilvl0
\f1 \cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	\uc0\u8226 	}
\f0 \cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 use of include files\
\ls1\ilvl0
\f1 \cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	\uc0\u8226 	}
\f0 \cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 use of I/O macros\
\ls1\ilvl0
\f1 \cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	\uc0\u8226 	}
\f0 \cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 numeric I/O\
\ls1\ilvl0
\f1 \cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	\uc0\u8226 	}
\f0 \cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 use of library files and procedures\
\ls1\ilvl0
\f1 \cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	\uc0\u8226 	}
\f0 \cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 integer arithmetic operations\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec2 \
Formatting and comments are to follow the example on the back of this page. \
\
This assignment consists of writing an IBM PC Assembly language program calculates wages. The wages are subject to 12% flat tax on any and all amounts of gross pay. Medical insurance payments may also be deducted if desired.
\f2\b \cf2 \strokec2 \

\f0\b0 \cf2 \strokec2 \
Three integer inputs are required to be entered, and then the program should produce the gross pay (hours * rate), the tax (gross pay * 12%), and net pay (gross \'96 tax \'96insurance). Round off errors may occur since the numerical values are integers and the program performs division\
\
The entry procedure should be called MAIN. Output will look exactly like this:\
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \strokec2 \
CECS 524 Pay Calculator.\
\
Enter hours worked:40\
Enter rate of pay:10\
Enter insurance deduction:50\
\
Gross pay:400\
Tax:48\
Insurance:50\
\pard\pardeftab720\partightenfactor0

\f0\b0 \cf2 \strokec2 Net pay:302
\f2\b \cf2 \strokec2 \
\
\
A second example:\

\f0\b0 \cf2 \strokec2                 
\f2\b \cf2 \strokec2 \
\
\
CECS 524 Pay Calculator.\
\
Enter hours worked:23\
Enter rate of pay:13\
Enter insurance deduction:25\
\
Gross pay:299\
Tax:35\
Insurance:25\
Net pay:239\
\
\page 
\f0\b0 \cf2 \strokec2  \
\pard\tx360\tx720\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	1.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Every procedure (except main) shall have a comment header describing the purpose of the function, its interface (parameters whether passed in registers or on the stack, and its return value.\
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	2.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Every instruction except RET shall have a comment starting at column 35. Pseudo-ops such as PROC, ENDP, .DATA, and so on do not require comments.\
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	3.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Instruction and segment formats are as follows:\
\pard\tx1080\tx1440\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Program segments pseudo-ops are to start in column 10. \
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	b.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 All instructions are also to start in column 10. \
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	c.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Procedure pseudo-ops start in column 1. \
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	d.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Operands start in column 20.\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	e.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Comments on instructions begin in column 35. If an instruction\'92s length exceeds 35, then its comment starts one space immediately after the end of the instruction.\
\pard\tx360\tx720\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	4.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 All instructions and pseudo-ops are to be in all caps. Ex. ADD, PROC.\
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	5.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 All register references are to be in all caps. Ex. AX, DS, BP.\
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	6.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 All user defined identifiers are to have first letter capitalized and following letters in lower case. Use meaningful names. Names that convey a meaning of more than one word (Ex. RateOfPay) should capitalize each word.\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec2 \
A small sample follows. The numbers are for column reference only. Do not include them in your code.\
\
1234567890123456789012345678901234567890\
         1111111111222222222233333333334 \
;Purpose: Procedure CalcSum sums the values of AX, BX, and MyVar\
;Parameters: AX = accumulated sum, BX = second input, MyVar = third input\
;Returns: AX\
;\
CalcSumSum  PROC\
         ADD       AX, BX         ;AX = AX + BX. BX contains second input\
         ADD       AX, MyVar      ;AX = AX + MyVar. MyVar contains third input\
         RET\
CalcSum     ENDP\
	}